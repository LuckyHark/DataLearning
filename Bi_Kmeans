#!/usr/bin/python
#--coding: utf-8 --

import pandas as pd #导入pandas模块并命名为pd
import xlrd #导入xlrd模板用于EXCEL读取
import xlwt #导入xlwt模板用于EXCEL写入
import numpy as np #导入numpy模块并命名为np

#数据读取与数据初始化
FileRoad = 'consumption_data.xls' #路径变量
Outfile = 'BI_data_type.xls' #结果文件变量
k=3 #聚类个数
iteration = 500 #聚类最大迭代次数
data = pd.read_excel(FileRoad, index_col='Id') #读取数据，指定id为索引列
data_zs = 1.0*(data-data.mean())/data.std() #数据z值标准化

#数据统计(聚类分析)
from sklearn.cluster import KMeans
model = KMeans(n_clusters = k, n_jobs = 4, max_iter= iteration) #聚类个数k；进程数4；最大迭代500
model.fit(data_zs) #对标准化数据进行聚类

r1 = pd.Series(model.labels_).value_counts() #标注各样本所属的类别
r2 = pd.DataFrame(model.cluster_centers_) #找出聚类中心
r = pd.concat([r2,r1],axis=1) #聚类中心对应类别下的数目
r.columns = list(data.columns) + [u'ClusterNumber'] #重命名表头

#数据输出
r = pd.concat([data,pd.Series(model.labels_,index=data.index)], axis=1) #增加类别标记列
r.columns = list(data.columns) + ['Cluster'] #重命名标记列名
r.to_excel(Outfile)

#图表绘制（分特征分群的概率密度图）
def density_plot(data): #定义作图函数
    import  matplotlib.pyplot as plt
    plt.rcParams['font.sans-serif'] = ['SimHei'] #显示中文字体
    plt.rcParams['axes.unicode_minus'] = False #显示负号
    p = data.plot(kind='kde',linewidth =2 , subplots = True, sharex = False)
    ## kde为概率密度图，line为线形图,bar,barh为条形图；subplot是否同框展示；sharex是否坐标轴相同
    [p[i].set_ylabel('Density') for i in range(k)]
    plt.legend() #显示图例
    return plt

pic_output = 'D:/Python/pd_' # 概率密度图文件名前缀
for i in range(k):
    density_plot(data[r['Cluster']==i]).savefig(u'%s%s.png'%(pic_output,i)) #调用作图函数

